
ARG NODE_VERSION=22.14.0

FROM node:${NODE_VERSION}-alpine

# Use development node environment
ENV NODE_ENV=development

WORKDIR /usr/src/app

# Download dependencies as a separate step to take advantage of Docker's caching.
# Leverage a cache mount to /root/.npm to speed up subsequent builds.
# Leverage a bind mounts to package.json and package-lock.json to avoid having to copy them into
# into this layer.
RUN --mount=type=bind,source=package.json,target=package.json \
    --mount=type=bind,source=package-lock.json,target=package-lock.json \
    --mount=type=cache,target=/root/.npm \
    npm ci

# Copy the rest of the source files into the image.
COPY . .

# Change ownership of the entire app directory to the node user
RUN chown -R node:node /usr/src/app

# Run the application as a non-root user.
USER node

# Expose the port that the application listens on.
EXPOSE 5173

# Run the application with host binding for Docker
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
